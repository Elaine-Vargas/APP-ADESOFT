generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Producto {
  IdProducto    Int         @id
  CodigoP       String      @db.VarChar(20)
  ReferenciaP   String?     @db.VarChar(20)
  PresentacionP String?     @db.VarChar(20)
  NombreP       String      @db.VarChar(60)
  PrecioP       Float?      @default(0) @db.Float
  ImpuestoP     Float?      @default(0) @db.Float
  ExentoP       Int?        @default(0) @db.TinyInt
  ExistenciaP   Float?      @default(0) @db.Float
  GrupoP        String      @db.VarChar(50)
  FechaSinc     DateTime?   @db.Timestamp(0)
  OrdenItem     OrdenItem[]
}

model Vendedor {
  IdVendedor     String           @id @db.VarChar(6)
  CedulaV        String?          @db.Char(13)
  NombreV        String           @db.VarChar(50)
  TelefonoV      String?          @db.Char(50)
  IdRuta         String?          @db.VarChar(6)
  FechaSinc      DateTime?        @db.Timestamp(0)
  Activo         Int?             @db.TinyInt
  Vendedor       Int              @default(1) @db.TinyInt
  Orden          Orden[]
  ReferenciaPago ReferenciaPago[]
  Transaccion    Transaccion[]
}

model Cliente {
  IdCliente      String           @id @db.VarChar(10)
  NombreC        String           @db.VarChar(60)
  Rnc            String?          @db.VarChar(15)
  TelefonoC      String?          @db.VarChar(50)
  DireccionC1    String?          @db.VarChar(60)
  DireccionC2    String?          @db.VarChar(60)
  ClienteExento  Boolean?         @default(false)
  BalanceC       Float?           @db.Float
  IdVendedor     String?          @db.VarChar(6)
  Ciudad         String?          @db.VarChar(50)
  Idzona         String?          @db.VarChar(6)
  Idruta         String?          @db.VarChar(6)
  FechaSinc      DateTime?        @db.Timestamp(0)
  Orden          Orden[]
  ReferenciaPago ReferenciaPago[]
  Transaccion    Transaccion[]
}

model Orden {
  IdOrden       Int         @id @default(autoincrement())
  Fecha         DateTime    @db.Date
  IdCliente     String      @db.VarChar(10)
  IdVendedor    String      @db.VarChar(6)
  Subtotal      Float?      @default(0) @db.Float
  Impuesto      Float?      @default(0) @db.Float
  ValorImp      Float?      @default(0) @db.Float
  Total         Float?      @default(0) @db.Float
  Estado        Estado?     @default(A)
  FechaCreacion DateTime?   @default(now()) @db.Timestamp(0)
  FechaSinc     DateTime?   @db.Timestamp(0)
  Cliente       Cliente     @relation(fields: [IdCliente], references: [IdCliente], onDelete: NoAction, onUpdate: NoAction, map: "Orden_ibfk_1")
  Vendedor      Vendedor    @relation(fields: [IdVendedor], references: [IdVendedor], onDelete: NoAction, onUpdate: NoAction, map: "Orden_ibfk_2")
  items         OrdenItem[]

  @@index([IdCliente], map: "IdCliente")
  @@index([IdVendedor], map: "IdVendedor")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model OrdenItem {
  IdOrden    Int
  IdProducto Int
  Cantidad   Float?   @default(0) @db.Float
  PrecioV    Float?   @default(0) @db.Float
  Impuesto   Float?   @default(0) @db.Float
  orden      Orden    @relation(fields: [IdOrden], references: [IdOrden], onDelete: Cascade, onUpdate: NoAction, map: "OrdenItem_ibfk_1")
  Producto   Producto @relation(fields: [IdProducto], references: [IdProducto], onDelete: NoAction, onUpdate: NoAction, map: "OrdenItem_ibfk_2")

  @@id([IdOrden, IdProducto])
  @@index([IdProducto], map: "OrdenItem_ibfk_2")
}

model Config {
  IdConfig     Int           @id @default(autoincrement())
  Compania     String        @db.VarChar(60)
  Direccion1   String?       @db.VarChar(80)
  Direccion2   String?       @db.VarChar(80)
  Telefono     String?       @db.VarChar(50)
  Rnc          String?       @db.VarChar(15)
  Email        String?       @db.VarChar(50)
  Impuesto     Float         @db.Float
  Logo         String?       @db.Text
  TipoImpuesto TipoImpuesto? @default(I)
}

model Transaccion {
  IdTransa       Int              @id @default(autoincrement())
  Documento      String?          @db.VarChar(10)
  Tipo           Tipo?
  Fecha          DateTime         @db.Date
  FechaCreacion  DateTime?        @default(now()) @db.Timestamp(0)
  IdCliente      String           @db.VarChar(10)
  IdVendedor     String           @db.VarChar(6)
  Valor          Float?           @default(0) @db.Float
  Efectivo       Float?           @default(0) @db.Float
  Tarjeta        Float?           @default(0) @db.Float
  Cheque         Float?           @default(0) @db.Float
  Transferencia  Float?           @default(0) @db.Float
  Pendiente      Float?           @default(0) @db.Float
  ValorImp       Float?           @default(0) @db.Float
  ReferenciaId   String?          @db.VarChar(10)
  Concepto       String?          @db.VarChar(100)
  SECNCF         String?          @db.VarChar(20)
  FechaSinc      DateTime?        @db.Timestamp(0)
  ReferenciaPago ReferenciaPago[]
  Vendedor       Vendedor         @relation(fields: [IdVendedor], references: [IdVendedor], onDelete: NoAction, onUpdate: NoAction, map: "Transaccion_ibfk_1")
  Cliente        Cliente          @relation(fields: [IdCliente], references: [IdCliente], onDelete: NoAction, onUpdate: NoAction, map: "Transaccion_ibfk_2")

  @@index([IdCliente], map: "IdCliente")
  @@index([IdVendedor], map: "IdVendedor")
}

model ReferenciaPago {
  IdReferencia Int         @id @default(autoincrement())
  IdTransa     Int
  DocumentoIN  String      @unique(map: "DocumentoIN") @db.VarChar(10)
  DocumentoVE  String?     @db.VarChar(10)
  IdCliente    String?     @db.VarChar(10)
  IdVendedor   String?     @db.VarChar(6)
  ValorPago    Float       @db.Float
  CreatedAt    DateTime?   @default(now()) @db.Timestamp(0)
  Cliente      Cliente?    @relation(fields: [IdCliente], references: [IdCliente], onDelete: NoAction, onUpdate: NoAction, map: "ReferenciaPago_ibfk_2")
  Vendedor     Vendedor?   @relation(fields: [IdVendedor], references: [IdVendedor], onDelete: NoAction, onUpdate: NoAction, map: "ReferenciaPago_ibfk_3")
  Transaccion  Transaccion @relation(fields: [IdTransa], references: [IdTransa], onDelete: Cascade, onUpdate: NoAction, map: "ReferenciaPago_ibfk_1")

  @@index([IdCliente], map: "IdCliente")
  @@index([IdVendedor], map: "IdVendedor")
  @@index([IdTransa], map: "fk_referenciapago_transaccion")
}

model Rutas {
  Idruta String  @id @db.VarChar(6)
  Ruta   String? @db.VarChar(50)
}

model Zonas {
  Idzona String  @id @db.VarChar(6)
  Zona   String? @db.VarChar(50)
}

enum Estado {
  A
  P
  N
}

enum TipoImpuesto {
  I
  A
}

enum Tipo {
  VE
  IN
}
